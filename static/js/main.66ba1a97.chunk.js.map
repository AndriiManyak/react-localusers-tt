{"version":3,"sources":["pages/Login/Login.jsx","api/initialStates.js","pages/SignUpForm/SignUpForm.jsx","pages/EditUser/EditUser.jsx","components/Header/Header.jsx","components/User/User.jsx","pages/UserList/UserList.jsx","pages/Text/Text.jsx","pages/Users/Users.jsx","App.jsx","index.js"],"names":["initialValues","selectedUser","password","Login","history","useHistory","useState","users","setUsers","values","setValues","errors","setErrors","useEffect","loggedUser","localStorage","getItem","localUsers","Object","keys","push","handleChange","event","target","name","value","prevValues","prevErrors","validateForm","isFormValid","user","JSON","parse","length","className","onSubmit","preventDefault","setItem","onChange","map","type","placeholder","to","userFormInitial","surname","middleName","position","phoneNumber","login","confirmPassword","userFormFields","text","isRequired","SignUpForm","forEach","key","passwordNotConfirmed","handleLocalStorage","localUser","stringify","Fragment","classNames","Form__input","EditUser","isChanged","setIsChanged","loggedLogin","Header","activeClassName","User","UserList","Text","setText","formText","setFormText","Users","exact","path","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.66ba1a97.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\nconst initialValues = {\n  selectedUser: '',\n  password: '',\n};\n\nexport const Login = () => {\n  const history = useHistory();\n  const [users, setUsers] = useState([]);\n  const [values, setValues] = useState(initialValues);\n  const [errors, setErrors] = useState({});\n\n  useEffect(() => {\n    const loggedUser = localStorage.getItem('loggedUser');\n    const localUsers = Object.keys(localStorage);\n\n    if (loggedUser) {\n      history.push('/users');\n    }\n\n    setUsers(localUsers);\n  }, []);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setValues(prevValues => ({\n      ...prevValues,\n      [name]: value,\n    }));\n\n    setErrors(prevErrors => ({\n      ...prevErrors,\n      [name]: '',\n    }));\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (validateForm()) {\n      localStorage.setItem('loggedUser', values.selectedUser);\n      history.push('/users');\n    }\n  };\n\n  const validateForm = () => {\n    let isFormValid = true;\n\n    if (!values.selectedUser) {\n      isFormValid = false;\n\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        selectedUser: 'You need to chose user',\n      }));\n\n      return isFormValid;\n    }\n\n    const user = JSON.parse(localStorage.getItem(values.selectedUser));\n\n    if (values.password !== user.password) {\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        password: 'Incorect password',\n      }));\n\n      isFormValid = false;\n    }\n\n    return isFormValid;\n  };\n\n  return (\n    <>\n      {\n        users.length > 0\n          ? (\n            <>\n              <h2>Log In</h2>\n              <form\n                className=\"Form\"\n                onSubmit={handleSubmit}\n              >\n                <select\n                  className=\"Form__input\"\n                  name=\"selectedUser\"\n                  value={values.selectedUser}\n                  onChange={handleChange}\n                >\n                  <option value=\"\">Choose user</option>\n                  {\n                    users.map(user => (\n                      <option\n                        key={user}\n                        value={user}\n                      >\n                        {user}\n                      </option>\n                    ))\n                  }\n                </select>\n\n                {\n                  (errors.selectedUser) && (\n                    <span\n                      className=\"Form__error\"\n                    >\n                      {errors.selectedUser}\n                    </span>\n                  )\n                }\n\n                <input\n                  className=\"Form__input\"\n                  type=\"password\"\n                  name=\"password\"\n                  value={values.password}\n                  placeholder=\"password\"\n                  onChange={handleChange}\n                />\n\n                {\n                  (errors.password) && (\n                    <span className=\"Form__error\">\n                      {errors.password}\n                    </span>\n                  )\n                }\n\n                <button\n                  className=\"Form__submit-button\"\n                  type=\"submit\"\n                >\n                  Lon In\n                </button>\n              </form>\n            </>\n          )\n          : (\n            <>\n              <h2>\n                There are no users in database. Please sign up\n              </h2>\n              <Link to=\"/signup\">\n                Sign up\n              </Link>\n            </>\n          )\n      }\n    </>\n  );\n};\n","export const userFormInitial = {\n  name: '',\n  surname: '',\n  middleName: '',\n  position: '',\n  phoneNumber: '',\n  login: '',\n  password: '',\n  confirmPassword: '',\n};\n\nexport const userFormFields = {\n  name: {\n    text: 'Name',\n    isRequired: true,\n    type: 'text',\n  },\n  surname: {\n    text: 'Surname',\n    isRequired: true,\n    type: 'text',\n  },\n  login: {\n    text: 'Login',\n    isRequired: true,\n    type: 'text',\n  },\n  middleName: {\n    text: 'Middle name',\n    isRequired: false,\n    type: 'text',\n  },\n  position: {\n    text: 'Position',\n    isRequired: false,\n    type: 'text',\n  },\n  phoneNumber: {\n    text: 'Phone number',\n    isRequired: false,\n    type: 'tel',\n  },\n  password: {\n    text: 'Password',\n    isRequired: true,\n    type: 'password',\n  },\n  confirmPassword: {\n    text: 'Confirm password',\n    isRequired: true,\n    type: 'password',\n  },\n};\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport {\n  userFormInitial,\n  userFormFields,\n} from '../../api/initialStates';\n\nexport const SignUpForm = () => {\n  const history = useHistory();\n  const [values, setValues] = useState(userFormInitial);\n  const [errors, setErrors] = useState({});\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setValues(prevValues => ({\n      ...prevValues,\n      [name]: value,\n    }));\n\n    setErrors(prevErrors => ({\n      ...prevErrors,\n      [name]: '',\n    }));\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (validateForm()) {\n      handleLocalStorage();\n      history.push('/');\n    }\n  };\n\n  const validateForm = () => {\n    let isFormValid = true;\n\n    Object.keys(values).forEach((key) => {\n      if (!values[key] && userFormFields[key].isRequired) {\n        isFormValid = false;\n        setErrors(prevErrors => ({\n          ...prevErrors,\n          [key]: `${userFormFields[key].text} is required`,\n        }));\n      }\n    });\n\n    if (values.password !== values.confirmPassword) {\n      isFormValid = false;\n\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        passwordNotConfirmed: true,\n      }));\n    }\n\n    return isFormValid;\n  };\n\n  const handleLocalStorage = () => {\n    const { confirmPassword, ...localUser } = values;\n\n    localStorage.setItem(`${localUser.login}`, JSON.stringify(localUser));\n  };\n\n  return (\n    <>\n      <h2>Sign Up</h2>\n\n      <form\n        className=\"Form\"\n        onSubmit={handleSubmit}\n      >\n        {\n          Object.keys(userFormFields).map(key => (\n            <React.Fragment key={key}>\n              <input\n                className={\n                  classNames(\n                    { Form__input: true },\n                    { 'Form__input--error': errors[key] },\n                  )\n                }\n                type={userFormFields[key].type}\n                name={key}\n                value={values[key]}\n                placeholder={userFormFields[key].text}\n                onChange={handleChange}\n              />\n              <span\n                className=\"Form__error\"\n              >\n                {errors[key]}\n              </span>\n            </React.Fragment>\n          ))\n        }\n\n        {errors.passwordNotConfirmed && (\n          <span\n            className=\"Form__error\"\n          >\n            Passwords must be equal\n          </span>\n        )}\n\n        <button\n          className=\"Form__submit-button\"\n          type=\"submit\"\n        >\n          Submit\n        </button>\n      </form>\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport {\n  userFormFields,\n} from '../../api/initialStates';\n\nexport const EditUser = () => {\n  const history = useHistory();\n  const [values, setValues] = useState(null);\n  const [errors, setErrors] = useState({});\n  const [isChanged, setIsChanged] = useState(false);\n\n  useEffect(() => {\n    const loggedLogin = localStorage.getItem('loggedUser');\n\n    if (!loggedLogin) {\n      history.push('/');\n    }\n\n    const loggedUser = JSON.parse(localStorage.getItem(loggedLogin));\n\n    setValues({\n      ...loggedUser,\n      confirmPassword: '',\n    });\n  }, []);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (validateForm()) {\n      handleLocalStorage();\n      setIsChanged(true);\n    }\n  };\n\n  const validateForm = () => {\n    let isFormValid = true;\n\n    Object.keys(values).forEach((key) => {\n      if (!values[key] && userFormFields[key].isRequired) {\n        isFormValid = false;\n        setErrors(prevErrors => ({\n          ...prevErrors,\n          [key]: `${userFormFields[key].text} is required`,\n        }));\n      }\n    });\n\n    if (values.password !== values.confirmPassword) {\n      isFormValid = false;\n\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        passwordNotConfirmed: true,\n      }));\n    }\n\n    return isFormValid;\n  };\n\n  const handleLocalStorage = () => {\n    localStorage.setItem(values.login, JSON.stringify(values));\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setValues(prevValues => ({\n      ...prevValues,\n      [name]: value,\n    }));\n\n    setErrors(prevErrors => ({\n      ...prevErrors,\n      [name]: '',\n    }));\n  };\n\n  return (\n    <>\n      <h2>Edit user</h2>\n\n      {values && (\n        <form\n          className=\"Form\"\n          onSubmit={handleSubmit}\n        >\n          {\n            Object.keys(userFormFields).map(key => (\n              <React.Fragment key={key}>\n                <input\n                  className={\n                    classNames(\n                      { Form__input: true },\n                      { 'Form__input--error': errors[key] },\n                    )\n                  }\n                  type={userFormFields[key].type}\n                  name={key}\n                  value={values[key]}\n                  placeholder={userFormFields[key].text}\n                  onChange={handleChange}\n                />\n                <span\n                  className=\"Form__error\"\n                >\n                  {errors[key]}\n                </span>\n              </React.Fragment>\n            ))\n          }\n\n          {errors.passwordNotConfirmed && (\n            <span\n              className=\"Form__error\"\n            >\n              Passwords must be equal\n            </span>\n          )}\n\n          <button\n            className=\"Form__submit-button\"\n            type=\"submit\"\n          >\n            Save\n          </button>\n\n          {isChanged && (<h2>Changes is saved</h2>)}\n        </form>\n      )}\n\n    </>\n  );\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './Header.scss';\n\nexport const Header = () => (\n  <div className=\"Header\">\n    <nav className=\"Header__nav\">\n      <NavLink\n        to=\"/users/edit\"\n        activeClassName=\"Header__link--active\"\n      >\n        Edit user\n      </NavLink>\n\n      <NavLink\n        to=\"/users/list\"\n        activeClassName=\"Header__link--active\"\n      >\n        List of users\n      </NavLink>\n\n      <NavLink\n        to=\"/users/text\"\n        activeClassName=\"Header__link--active\"\n      >\n        Text form\n      </NavLink>\n    </nav>\n  </div>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './User.scss';\n\nexport const User = ({\n  name,\n  surname,\n  login,\n  position,\n}) => (\n  <div className=\"User\">\n    <h3>{`${name} ${surname}`}</h3>\n    <p>\n      <span>Login: </span>\n      {login}\n    </p>\n    <p>\n      <span>Position: </span>\n      {position}\n    </p>\n  </div>\n);\n\nUser.propTypes = {\n  name: PropTypes.string.isRequired,\n  surname: PropTypes.string.isRequired,\n  login: PropTypes.string.isRequired,\n  position: PropTypes.string.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport { User } from '../../components/User/User';\n\nimport './UserList.scss';\n\nexport const UserList = () => {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    const localUsers = [];\n\n    Object.keys(localStorage).forEach((key) => {\n      if (key !== 'loggedUser') {\n        localUsers.push(JSON.parse(localStorage.getItem(key)));\n      }\n    });\n\n    setUsers(localUsers);\n  }, []);\n\n  return (\n    <div className=\"UserList\">\n      {\n        users.map(user => (\n          <div\n            className=\"UserList__element\"\n            key={user.login}\n          >\n            <User\n              {...user}\n            />\n          </div>\n        ))\n      }\n    </div>\n  );\n};\n","import React, { useState } from 'react';\n\nimport './Text.scss';\n\nexport const Text = () => {\n  const [text, setText] = useState('');\n  const [formText, setFormText] = useState('');\n\n  const handleChange = (event) => {\n    setFormText(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setText(formText);\n  };\n\n  return (\n    <div className=\"Text\">\n      <h2 className=\"Text__header\">Enter text</h2>\n      <form\n        className=\"Form\"\n        onSubmit={handleSubmit}\n      >\n        <textarea\n          type=\"text\"\n          name=\"text\"\n          className=\"Form__textarea\"\n          value={formText}\n          onChange={handleChange}\n        />\n\n        <button\n          type=\"submit\"\n          className=\"Form__submit-button\"\n        >\n          Save\n        </button>\n      </form>\n      <p className=\"Text__output\">{text}</p>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { EditUser } from '../EditUser/EditUser';\nimport { Header } from '../../components/Header';\nimport { UserList } from '../UserList/UserList';\nimport { Text } from '../Text';\n\nexport const Users = () => (\n  <div className=\"Users\">\n    <Header />\n\n    <Switch>\n      <Route exact path={['/users', '/users/edit']}>\n        <EditUser />\n      </Route>\n\n      <Route path=\"/users/list\">\n        <UserList />\n      </Route>\n\n      <Route path=\"/users/text\">\n        <Text />\n      </Route>\n    </Switch>\n  </div>\n);\n","/* eslint-disable no-console */\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.scss';\nimport { Login } from './pages/Login/Login';\nimport { SignUpForm } from './pages/SignUpForm';\nimport { Users } from './pages/Users/Users';\n\nexport const App = () => (\n  <div className=\"App\">\n    <Switch>\n      <Route exact path=\"/\">\n        <Login />\n      </Route>\n\n      <Route path=\"/signup\">\n        <SignUpForm />\n      </Route>\n\n      <Route path=\"/users\">\n        <Users />\n      </Route>\n    </Switch>\n  </div>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}